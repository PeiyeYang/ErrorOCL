(declare-datatypes () ((Sex M F)))
(declare-datatypes () ((Programme BACHELOR MASTER PHD)))
(declare-datatypes () ((StudentStatus GRADUATED PROGRAMMING)))
(declare-datatypes () ((FacultyPosition ASSISTANTPROFESSORS ASSOCIATEPROFESSOR PROFESSOR CHAIRPROFESSOR)))
(declare-datatypes () ((FacultyStatus HASRETIRED INPOSITION)))
(declare-datatypes () ((BorrowStatus NORMAL SUSPEND)))
(declare-datatypes () ((CopyStatus AVAILABLE INPROCESSING LIBUSEONLY ONHOLDSHELF LOANED)))
(declare-datatypes () ((Entity_User (mk_User (UserID String)(Name String)(Sex Sex)(Password String)(Email String)(Faculty String)(LoanedNumber Int)(BorrowStatus BorrowStatus)(SuspensionDays Int)(OverDueFee Real)))))
(declare-const Set_User (Set Entity_User))
(declare-const Seq_User (Seq Entity_User))
(declare-datatypes () ((Entity_Student (mk_Student (Major String)(Programme Programme)(RegistrationStatus StudentStatus)(superEntity Entity_User)))))
(declare-const Set_Student (Set Entity_Student))
(declare-const Seq_Student (Seq Entity_Student))
(declare-datatypes () ((Entity_Faculty (mk_Faculty (Position FacultyPosition)(Status FacultyStatus)(superEntity Entity_User)))))
(declare-const Set_Faculty (Set Entity_Faculty))
(declare-const Seq_Faculty (Seq Entity_Faculty))
(declare-datatypes () ((Entity_Book (mk_Book (CallNo String)(Title String)(Edition String)(Author String)(Publisher String)(Description String)(ISBn String)(CopyNum Int)))))
(declare-const Set_Book (Set Entity_Book))
(declare-const Seq_Book (Seq Entity_Book))
(declare-datatypes () ((Entity_Subject (mk_Subject (Name String)))))
(declare-const Set_Subject (Set Entity_Subject))
(declare-const Seq_Subject (Seq Entity_Subject))
(declare-datatypes () ((Entity_BookCopy (mk_BookCopy (Barcode String)(Status CopyStatus)(Location String)(IsReserved Bool)))))
(declare-const Set_BookCopy (Set Entity_BookCopy))
(declare-const Seq_BookCopy (Seq Entity_BookCopy))
(declare-datatypes () ((Entity_Loan (mk_Loan (LoanDate Int)(RenewDate Int)(DueDate Int)(ReturnDate Int)(RenewedTimes Int)(IsReturned Bool)(OverDueFee Real)(OverDue3Days Bool)(OverDue10Days Bool)(OverDue17Days Bool)(OverDue31Days Bool)))))
(declare-const Set_Loan (Set Entity_Loan))
(declare-const Seq_Loan (Seq Entity_Loan))
(declare-datatypes () ((Entity_Reserve (mk_Reserve (ReserveDate Int)(IsReserveClosed Bool)))))
(declare-const Set_Reserve (Set Entity_Reserve))
(declare-const Seq_Reserve (Seq Entity_Reserve))
(declare-datatypes () ((Entity_RecommendBook (mk_RecommendBook (RecommendDate Int)(superEntity Entity_Book)))))
(declare-const Set_RecommendBook (Set Entity_RecommendBook))
(declare-const Seq_RecommendBook (Seq Entity_RecommendBook))
(declare-datatypes () ((Entity_Administrator (mk_Administrator (AdminID String)(UserName String)(Password String)))))
(declare-const Set_Administrator (Set Entity_Administrator))
(declare-const Seq_Administrator (Seq Entity_Administrator))
(declare-datatypes () ((Entity_Librarian (mk_Librarian (LibrarianID String)(Name String)(Password String)))))
(declare-const Set_Librarian (Set Entity_Librarian))
(declare-const Seq_Librarian (Seq Entity_Librarian))
(declare-fun Set_User_LoanedBook (Entity_User) (Set Entity_Loan))
(declare-fun Seq_User_LoanedBook (Entity_User) (Seq Entity_Loan))
(declare-fun Set_User_ReservedBook (Entity_User) (Set Entity_Reserve))
(declare-fun Seq_User_ReservedBook (Entity_User) (Seq Entity_Reserve))
(declare-fun Set_User_RecommendedBook (Entity_User) (Set Entity_RecommendBook))
(declare-fun Seq_User_RecommendedBook (Entity_User) (Seq Entity_RecommendBook))
(declare-fun Set_Book_Copys (Entity_Book) (Set Entity_BookCopy))
(declare-fun Seq_Book_Copys (Entity_Book) (Seq Entity_BookCopy))
(declare-fun Set_Book_Subject (Entity_Book) (Set Entity_Subject))
(declare-fun Seq_Book_Subject (Entity_Book) (Seq Entity_Subject))
(declare-fun Set_Subject_SuperSubject (Entity_Subject) (Set Entity_Subject))
(declare-fun Seq_Subject_SuperSubject (Entity_Subject) (Seq Entity_Subject))
(declare-fun Set_Subject_SubSubject (Entity_Subject) (Set Entity_Subject))
(declare-fun Seq_Subject_SubSubject (Entity_Subject) (Seq Entity_Subject))
(declare-fun Set_BookCopy_BookBelongs (Entity_BookCopy) (Set Entity_Book))
(declare-fun Seq_BookCopy_BookBelongs (Entity_BookCopy) (Seq Entity_Book))
(declare-fun Set_BookCopy_LoanedRecord (Entity_BookCopy) (Set Entity_Loan))
(declare-fun Seq_BookCopy_LoanedRecord (Entity_BookCopy) (Seq Entity_Loan))
(declare-fun Set_BookCopy_ReservationRecord (Entity_BookCopy) (Set Entity_Reserve))
(declare-fun Seq_BookCopy_ReservationRecord (Entity_BookCopy) (Seq Entity_Reserve))
(declare-fun Set_Loan_LoanedUser (Entity_Loan) (Set Entity_User))
(declare-fun Seq_Loan_LoanedUser (Entity_Loan) (Seq Entity_User))
(declare-fun Set_Loan_LoanedCopy (Entity_Loan) (Set Entity_BookCopy))
(declare-fun Seq_Loan_LoanedCopy (Entity_Loan) (Seq Entity_BookCopy))
(declare-fun Set_Loan_LoanLibrarian (Entity_Loan) (Set Entity_Librarian))
(declare-fun Seq_Loan_LoanLibrarian (Entity_Loan) (Seq Entity_Librarian))
(declare-fun Set_Loan_ReturnLibrarian (Entity_Loan) (Set Entity_Librarian))
(declare-fun Seq_Loan_ReturnLibrarian (Entity_Loan) (Seq Entity_Librarian))
(declare-fun Set_Reserve_ReservedCopy (Entity_Reserve) (Set Entity_BookCopy))
(declare-fun Seq_Reserve_ReservedCopy (Entity_Reserve) (Seq Entity_BookCopy))
(declare-fun Set_Reserve_ReservedUser (Entity_Reserve) (Set Entity_User))
(declare-fun Seq_Reserve_ReservedUser (Entity_Reserve) (Seq Entity_User))
(declare-fun Set_RecommendBook_RecommendUser (Entity_RecommendBook) (Set Entity_User))
(declare-fun Seq_RecommendBook_RecommendUser (Entity_RecommendBook) (Seq Entity_User))
(assert (forall ((@i Entity_User)) (=> (select Set_User @i) (forall ((@i1 Entity_User)) (=> (and (select Set_User @i1) (not (= @i @i1))) (not (= (UserID @i) (UserID @i1))))))))
(assert (forall ((@i Entity_User)) (=> (select Set_User @i) (>= (OverDueFee @i) 0))))
(assert (forall ((@i Entity_User)) (=> (select Set_User @i) (>= (LoanedNumber @i) 0))))
(assert (forall ((@i Entity_User)) (=> (select Set_User @i) (>= (SuspensionDays @i) 0))))
(assert (forall ((@i Entity_User)) (=> (select Set_User @i) (< (str.len (Password @i)) 10))))
(assert (forall ((@i Entity_Student)) (=> (select Set_Student @i) (forall ( (stu Entity_Student) ) (=> (select Set_Student stu) (<= (LoanedNumber (superEntity stu)) 12))))))
(assert (forall ((@i Entity_Student)) (=> (select Set_Student @i) (<= (seq.len (Seq_User_LoanedBook (superEntity @i))) 12))))
(assert (forall ((@i Entity_Faculty)) (=> (select Set_Faculty @i) (forall ( (stu Entity_Student) ) (=> (select Set_Student stu) (<= (LoanedNumber (superEntity stu)) 24))))))
(assert (forall ((@i Entity_Faculty)) (=> (select Set_Faculty @i) (<= (seq.len (Seq_User_LoanedBook (superEntity @i))) 24))))
(assert (forall ((@i Entity_Book)) (=> (select Set_Book @i) (forall ((@i1 Entity_Book)) (=> (and (select Set_Book @i1) (not (= @i @i1))) (not (= (CallNo @i) (CallNo @i1))))))))
(assert (forall ((@i Entity_Book)) (=> (select Set_Book @i) (forall ((@i1 Entity_Book)) (=> (and (select Set_Book @i1) (not (= @i @i1))) (not (= (ISBn @i) (ISBn @i1))))))))
(assert (forall ((@i Entity_Book)) (=> (select Set_Book @i) (>= (CopyNum @i) 0))))
(assert (forall ((@i Entity_BookCopy)) (=> (select Set_BookCopy @i) (forall ((@i1 Entity_BookCopy)) (=> (and (select Set_BookCopy @i1) (not (= @i @i1))) (not (= (Barcode @i) (Barcode @i1))))))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (>= (OverDueFee @i) 0))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (and (>= (RenewedTimes @i) 0)(<= (RenewedTimes @i) 6)))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (>= (OverDueFee @i) 0))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (ite (= (< (RenewDate @i) 0) false) (> (RenewDate @i) (LoanDate @i)) true))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (> (DueDate @i) (LoanDate @i)))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (ite (= (< (ReturnDate @i) 0) false) (or (> (ReturnDate @i) (LoanDate @i))(= (ReturnDate @i) (LoanDate @i))) true))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (ite (= (< (RenewDate @i) 0) false) (or (> (DueDate @i) (RenewDate @i))(= (DueDate @i) (RenewDate @i))) true))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (ite (and (= (< (RenewDate @i) 0) false)(= (< (ReturnDate @i) 0) false)) (or (> (ReturnDate @i) (RenewDate @i))(= (ReturnDate @i) (RenewDate @i))) true))))
(assert (forall ((@i Entity_RecommendBook)) (=> (select Set_RecommendBook @i) (>= (CopyNum (superEntity @i)) 0))))
(assert (forall ((@i Entity_Administrator)) (=> (select Set_Administrator @i) (forall ((@i1 Entity_Administrator)) (=> (and (select Set_Administrator @i1) (not (= @i @i1))) (not (= (AdminID @i) (AdminID @i1))))))))
(assert (forall ((@i Entity_Librarian)) (=> (select Set_Librarian @i) (forall ((@i1 Entity_Librarian)) (=> (and (select Set_Librarian @i1) (not (= @i @i1))) (not (= (LibrarianID @i) (LibrarianID @i1))))))))
(assert (forall ((@i Entity_Student)) (=> (select Set_Student @i) (select Set_User (superEntity @i)))))
(assert (forall ((@i Entity_Faculty)) (=> (select Set_Faculty @i) (select Set_User (superEntity @i)))))
(assert (forall ((@i Entity_RecommendBook)) (=> (select Set_RecommendBook @i) (select Set_Book (superEntity @i)))))
(assert (exists((@i Entity_User)) (select Set_User @i)))
(assert (forall ((@i1 Entity_User)(@i2 Entity_Loan)) (=> (and (select Set_User @i1) (select (Set_User_LoanedBook @i1) @i2)) (select Set_Loan @i2))))
(assert (forall ((@i1 Entity_User)(@i2 Entity_Reserve)) (=> (and (select Set_User @i1) (select (Set_User_ReservedBook @i1) @i2)) (select Set_Reserve @i2))))
(assert (forall ((@i1 Entity_User)(@i2 Entity_RecommendBook)) (=> (and (select Set_User @i1) (select (Set_User_RecommendedBook @i1) @i2)) (select Set_RecommendBook @i2))))
(assert (exists((@i Entity_Student)) (select Set_Student @i)))
(assert (exists((@i Entity_Faculty)) (select Set_Faculty @i)))
(assert (exists((@i Entity_Book)) (select Set_Book @i)))
(assert (forall ((@i1 Entity_Book)(@i2 Entity_BookCopy)) (=> (and (select Set_Book @i1) (select (Set_Book_Copys @i1) @i2)) (select Set_BookCopy @i2))))
(assert (forall ((@i1 Entity_Book)(@i2 Entity_Subject)) (=> (and (select Set_Book @i1) (select (Set_Book_Subject @i1) @i2)) (select Set_Subject @i2))))
(assert (exists((@i Entity_Subject)) (select Set_Subject @i)))
(assert (forall ((@i1 Entity_Subject)(@i2 Entity_Subject)) (=> (and (select Set_Subject @i1) (select (Set_Subject_SuperSubject @i1) @i2)) (select Set_Subject @i2))))
(assert (forall ((@i1 Entity_Subject)(@i2 Entity_Subject)) (=> (and (select Set_Subject @i1) (select (Set_Subject_SubSubject @i1) @i2)) (select Set_Subject @i2))))
(assert (exists((@i Entity_BookCopy)) (select Set_BookCopy @i)))
(assert (forall ((@i1 Entity_BookCopy)(@i2 Entity_Book)) (=> (and (select Set_BookCopy @i1) (select (Set_BookCopy_BookBelongs @i1) @i2)) (select Set_Book @i2))))
(assert (forall ((@i1 Entity_BookCopy)(@i2 Entity_Loan)) (=> (and (select Set_BookCopy @i1) (select (Set_BookCopy_LoanedRecord @i1) @i2)) (select Set_Loan @i2))))
(assert (forall ((@i1 Entity_BookCopy)(@i2 Entity_Reserve)) (=> (and (select Set_BookCopy @i1) (select (Set_BookCopy_ReservationRecord @i1) @i2)) (select Set_Reserve @i2))))
(assert (exists((@i Entity_Loan)) (select Set_Loan @i)))
(assert (forall ((@i1 Entity_Loan)(@i2 Entity_User)) (=> (and (select Set_Loan @i1) (select (Set_Loan_LoanedUser @i1) @i2)) (select Set_User @i2))))
(assert (forall ((@i1 Entity_Loan)(@i2 Entity_BookCopy)) (=> (and (select Set_Loan @i1) (select (Set_Loan_LoanedCopy @i1) @i2)) (select Set_BookCopy @i2))))
(assert (forall ((@i1 Entity_Loan)(@i2 Entity_Librarian)) (=> (and (select Set_Loan @i1) (select (Set_Loan_LoanLibrarian @i1) @i2)) (select Set_Librarian @i2))))
(assert (forall ((@i1 Entity_Loan)(@i2 Entity_Librarian)) (=> (and (select Set_Loan @i1) (select (Set_Loan_ReturnLibrarian @i1) @i2)) (select Set_Librarian @i2))))
(assert (exists((@i Entity_Reserve)) (select Set_Reserve @i)))
(assert (forall ((@i1 Entity_Reserve)(@i2 Entity_BookCopy)) (=> (and (select Set_Reserve @i1) (select (Set_Reserve_ReservedCopy @i1) @i2)) (select Set_BookCopy @i2))))
(assert (forall ((@i1 Entity_Reserve)(@i2 Entity_User)) (=> (and (select Set_Reserve @i1) (select (Set_Reserve_ReservedUser @i1) @i2)) (select Set_User @i2))))
(assert (exists((@i Entity_RecommendBook)) (select Set_RecommendBook @i)))
(assert (forall ((@i1 Entity_RecommendBook)(@i2 Entity_User)) (=> (and (select Set_RecommendBook @i1) (select (Set_RecommendBook_RecommendUser @i1) @i2)) (select Set_User @i2))))
(assert (exists((@i Entity_Administrator)) (select Set_Administrator @i)))
(assert (exists((@i Entity_Librarian)) (select Set_Librarian @i)))
(declare-const uid String)
(declare-const quantity Real)
(declare-const result Bool)
(declare-const user Entity_User)
(assert (ite (select Set_User user) (exists ((u Entity_User)) (and (= user u) (= (UserID u) uid))) (not(select Set_User user))))
(assert (= (not (select Set_User user)) false))
(declare-const user@post Entity_User)
(declare-const quantity@post Real)
(assert (= (OverDueFee user@post) quantity))
(assert (= result true))
(assert (not (>= (OverDueFee user@post) 0)))
