(declare-datatypes () ((PaymentMethod CASH CARD)))
(declare-datatypes () ((OrderStatus NEW RECEIVED REQUESTED)))
(declare-datatypes () ((Entity_Store (mk_Store (Id Int)(Name String)(Address String)(IsOpened Bool)))))
(declare-const Set_Store (Set Entity_Store))
(declare-const Seq_Store (Seq Entity_Store))
(declare-datatypes () ((Entity_ProductCatalog (mk_ProductCatalog (Id Int)(Name String)))))
(declare-const Set_ProductCatalog (Set Entity_ProductCatalog))
(declare-const Seq_ProductCatalog (Seq Entity_ProductCatalog))
(declare-datatypes () ((Entity_CashDesk (mk_CashDesk (Id Int)(Name String)(IsOpened Bool)))))
(declare-const Set_CashDesk (Set Entity_CashDesk))
(declare-const Seq_CashDesk (Seq Entity_CashDesk))
(declare-datatypes () ((Entity_Sale (mk_Sale (Time Int)(IsComplete Bool)(Amount Real)(IsReadytoPay Bool)))))
(declare-const Set_Sale (Set Entity_Sale))
(declare-const Seq_Sale (Seq Entity_Sale))
(declare-datatypes () ((Entity_Cashier (mk_Cashier (Id Int)(Name String)))))
(declare-const Set_Cashier (Set Entity_Cashier))
(declare-const Seq_Cashier (Seq Entity_Cashier))
(declare-datatypes () ((Entity_SalesLineItem (mk_SalesLineItem (Quantity Int)(Subamount Real)))))
(declare-const Set_SalesLineItem (Set Entity_SalesLineItem))
(declare-const Seq_SalesLineItem (Seq Entity_SalesLineItem))
(declare-datatypes () ((Entity_Item (mk_Item (Barcode Int)(Name String)(Price Real)(StockNumber Int)(OrderPrice Real)))))
(declare-const Set_Item (Set Entity_Item))
(declare-const Seq_Item (Seq Entity_Item))
(declare-datatypes () ((Entity_Payment (mk_Payment (AmountTendered Real)))))
(declare-const Set_Payment (Set Entity_Payment))
(declare-const Seq_Payment (Seq Entity_Payment))
(declare-datatypes () ((Entity_CashPayment (mk_CashPayment (Balance Real)(superEntity Entity_Payment)))))
(declare-const Set_CashPayment (Set Entity_CashPayment))
(declare-const Seq_CashPayment (Seq Entity_CashPayment))
(declare-datatypes () ((Entity_CardPayment (mk_CardPayment (CardAccountNumber String)(ExpiryDate Int)(superEntity Entity_Payment)))))
(declare-const Set_CardPayment (Set Entity_CardPayment))
(declare-const Seq_CardPayment (Seq Entity_CardPayment))
(declare-datatypes () ((Entity_OrderEntry (mk_OrderEntry (Quantity Int)(SubAmount Real)))))
(declare-const Set_OrderEntry (Set Entity_OrderEntry))
(declare-const Seq_OrderEntry (Seq Entity_OrderEntry))
(declare-datatypes () ((Entity_Supplier (mk_Supplier (Id Int)(Name String)))))
(declare-const Set_Supplier (Set Entity_Supplier))
(declare-const Seq_Supplier (Seq Entity_Supplier))
(declare-datatypes () ((Entity_OrderProduct (mk_OrderProduct (Id Int)(Time Int)(OrderStatus OrderStatus)(Amount Real)))))
(declare-const Set_OrderProduct (Set Entity_OrderProduct))
(declare-const Seq_OrderProduct (Seq Entity_OrderProduct))
(declare-fun Set_Store_AssociationCashdeskes (Entity_Store) (Set Entity_CashDesk))
(declare-fun Seq_Store_AssociationCashdeskes (Entity_Store) (Seq Entity_CashDesk))
(declare-fun Set_Store_Productcatalogs (Entity_Store) (Set Entity_ProductCatalog))
(declare-fun Seq_Store_Productcatalogs (Entity_Store) (Seq Entity_ProductCatalog))
(declare-fun Set_Store_Items (Entity_Store) (Set Entity_Item))
(declare-fun Seq_Store_Items (Entity_Store) (Seq Entity_Item))
(declare-fun Set_Store_Cashiers (Entity_Store) (Set Entity_Cashier))
(declare-fun Seq_Store_Cashiers (Entity_Store) (Seq Entity_Cashier))
(declare-fun Set_Store_Sales (Entity_Store) (Set Entity_Sale))
(declare-fun Seq_Store_Sales (Entity_Store) (Seq Entity_Sale))
(declare-fun Set_ProductCatalog_ContainedItems (Entity_ProductCatalog) (Set Entity_Item))
(declare-fun Seq_ProductCatalog_ContainedItems (Entity_ProductCatalog) (Seq Entity_Item))
(declare-fun Set_CashDesk_ContainedSales (Entity_CashDesk) (Set Entity_Sale))
(declare-fun Seq_CashDesk_ContainedSales (Entity_CashDesk) (Seq Entity_Sale))
(declare-fun Set_CashDesk_BelongedStore (Entity_CashDesk) (Set Entity_Store))
(declare-fun Seq_CashDesk_BelongedStore (Entity_CashDesk) (Seq Entity_Store))
(declare-fun Set_Sale_Belongedstore (Entity_Sale) (Set Entity_Store))
(declare-fun Seq_Sale_Belongedstore (Entity_Sale) (Seq Entity_Store))
(declare-fun Set_Sale_BelongedCashDesk (Entity_Sale) (Set Entity_CashDesk))
(declare-fun Seq_Sale_BelongedCashDesk (Entity_Sale) (Seq Entity_CashDesk))
(declare-fun Set_Sale_ContainedSalesLine (Entity_Sale) (Set Entity_SalesLineItem))
(declare-fun Seq_Sale_ContainedSalesLine (Entity_Sale) (Seq Entity_SalesLineItem))
(declare-fun Set_Sale_AssoicatedPayment (Entity_Sale) (Set Entity_Payment))
(declare-fun Seq_Sale_AssoicatedPayment (Entity_Sale) (Seq Entity_Payment))
(declare-fun Set_Cashier_WorkedStore (Entity_Cashier) (Set Entity_Store))
(declare-fun Seq_Cashier_WorkedStore (Entity_Cashier) (Seq Entity_Store))
(declare-fun Set_SalesLineItem_BelongedSale (Entity_SalesLineItem) (Set Entity_Sale))
(declare-fun Seq_SalesLineItem_BelongedSale (Entity_SalesLineItem) (Seq Entity_Sale))
(declare-fun Set_SalesLineItem_BelongedItem (Entity_SalesLineItem) (Set Entity_Item))
(declare-fun Seq_SalesLineItem_BelongedItem (Entity_SalesLineItem) (Seq Entity_Item))
(declare-fun Set_Item_BelongedCatalog (Entity_Item) (Set Entity_ProductCatalog))
(declare-fun Seq_Item_BelongedCatalog (Entity_Item) (Seq Entity_ProductCatalog))
(declare-fun Set_Payment_BelongedSale (Entity_Payment) (Set Entity_Sale))
(declare-fun Seq_Payment_BelongedSale (Entity_Payment) (Seq Entity_Sale))
(declare-fun Set_OrderEntry_Item (Entity_OrderEntry) (Set Entity_Item))
(declare-fun Seq_OrderEntry_Item (Entity_OrderEntry) (Seq Entity_Item))
(declare-fun Set_OrderProduct_Supplier (Entity_OrderProduct) (Set Entity_Supplier))
(declare-fun Seq_OrderProduct_Supplier (Entity_OrderProduct) (Seq Entity_Supplier))
(declare-fun Set_OrderProduct_ContainedEntries (Entity_OrderProduct) (Set Entity_OrderEntry))
(declare-fun Seq_OrderProduct_ContainedEntries (Entity_OrderProduct) (Seq Entity_OrderEntry))
(assert (forall ((@i Entity_Store)) (=> (select Set_Store @i) (forall ((@i1 Entity_Store)) (=> (and (select Set_Store @i1) (not (= @i @i1))) (not (= (Id @i) (Id @i1))))))))
(assert (forall ((@i Entity_ProductCatalog)) (=> (select Set_ProductCatalog @i) (forall ((@i1 Entity_ProductCatalog)) (=> (and (select Set_ProductCatalog @i1) (not (= @i @i1))) (not (= (Id @i) (Id @i1))))))))
(assert (forall ((@i Entity_CashDesk)) (=> (select Set_CashDesk @i) (forall ((@i1 Entity_CashDesk)) (=> (and (select Set_CashDesk @i1) (not (= @i @i1))) (not (= (Id @i) (Id @i1))))))))
(assert (forall ((@i Entity_Sale)) (=> (select Set_Sale @i) (>= (Amount @i) 0))))
(assert (forall ((@i Entity_Cashier)) (=> (select Set_Cashier @i) (forall ((@i1 Entity_Cashier)) (=> (and (select Set_Cashier @i1) (not (= @i @i1))) (not (= (Id @i) (Id @i1))))))))
(assert (forall ((@i Entity_Item)) (=> (select Set_Item @i) (forall ((@i1 Entity_Item)) (=> (and (select Set_Item @i1) (not (= @i @i1))) (not (= (Barcode @i) (Barcode @i1))))))))
(assert (forall ((@i Entity_Item)) (=> (select Set_Item @i) (>= (Price @i) 0))))
(assert (forall ((@i Entity_Item)) (=> (select Set_Item @i) (>= (StockNumber @i) 0))))
(assert (forall ((@i Entity_CashPayment)) (=> (select Set_CashPayment @i) (>= (Balance @i) 0))))
(assert (forall ((@i Entity_Supplier)) (=> (select Set_Supplier @i) (forall ((@i1 Entity_Supplier)) (=> (and (select Set_Supplier @i1) (not (= @i @i1))) (not (= (Id @i) (Id @i1))))))))
(assert (forall ((@i Entity_OrderProduct)) (=> (select Set_OrderProduct @i) (> (seq.len (Seq_OrderProduct_ContainedEntries @i)) 10))))
(assert (forall ((@i Entity_CashPayment)) (=> (select Set_CashPayment @i) (select Set_Payment (superEntity @i)))))
(assert (forall ((@i Entity_CardPayment)) (=> (select Set_CardPayment @i) (select Set_Payment (superEntity @i)))))
(assert (exists((@i Entity_Store)) (select Set_Store @i)))
(assert (forall ((@i1 Entity_Store)(@i2 Entity_CashDesk)) (=> (and (select Set_Store @i1) (select (Set_Store_AssociationCashdeskes @i1) @i2)) (select Set_CashDesk @i2))))
(assert (forall ((@i1 Entity_Store)(@i2 Entity_ProductCatalog)) (=> (and (select Set_Store @i1) (select (Set_Store_Productcatalogs @i1) @i2)) (select Set_ProductCatalog @i2))))
(assert (forall ((@i1 Entity_Store)(@i2 Entity_Item)) (=> (and (select Set_Store @i1) (select (Set_Store_Items @i1) @i2)) (select Set_Item @i2))))
(assert (forall ((@i1 Entity_Store)(@i2 Entity_Cashier)) (=> (and (select Set_Store @i1) (select (Set_Store_Cashiers @i1) @i2)) (select Set_Cashier @i2))))
(assert (forall ((@i1 Entity_Store)(@i2 Entity_Sale)) (=> (and (select Set_Store @i1) (select (Set_Store_Sales @i1) @i2)) (select Set_Sale @i2))))
(assert (exists((@i Entity_ProductCatalog)) (select Set_ProductCatalog @i)))
(assert (forall ((@i1 Entity_ProductCatalog)(@i2 Entity_Item)) (=> (and (select Set_ProductCatalog @i1) (select (Set_ProductCatalog_ContainedItems @i1) @i2)) (select Set_Item @i2))))
(assert (exists((@i Entity_CashDesk)) (select Set_CashDesk @i)))
(assert (forall ((@i1 Entity_CashDesk)(@i2 Entity_Sale)) (=> (and (select Set_CashDesk @i1) (select (Set_CashDesk_ContainedSales @i1) @i2)) (select Set_Sale @i2))))
(assert (forall ((@i1 Entity_CashDesk)(@i2 Entity_Store)) (=> (and (select Set_CashDesk @i1) (select (Set_CashDesk_BelongedStore @i1) @i2)) (select Set_Store @i2))))
(assert (exists((@i Entity_Sale)) (select Set_Sale @i)))
(assert (forall ((@i1 Entity_Sale)(@i2 Entity_Store)) (=> (and (select Set_Sale @i1) (select (Set_Sale_Belongedstore @i1) @i2)) (select Set_Store @i2))))
(assert (forall ((@i1 Entity_Sale)(@i2 Entity_CashDesk)) (=> (and (select Set_Sale @i1) (select (Set_Sale_BelongedCashDesk @i1) @i2)) (select Set_CashDesk @i2))))
(assert (forall ((@i1 Entity_Sale)(@i2 Entity_SalesLineItem)) (=> (and (select Set_Sale @i1) (select (Set_Sale_ContainedSalesLine @i1) @i2)) (select Set_SalesLineItem @i2))))
(assert (forall ((@i1 Entity_Sale)(@i2 Entity_Payment)) (=> (and (select Set_Sale @i1) (select (Set_Sale_AssoicatedPayment @i1) @i2)) (select Set_Payment @i2))))
(assert (exists((@i Entity_Cashier)) (select Set_Cashier @i)))
(assert (forall ((@i1 Entity_Cashier)(@i2 Entity_Store)) (=> (and (select Set_Cashier @i1) (select (Set_Cashier_WorkedStore @i1) @i2)) (select Set_Store @i2))))
(assert (exists((@i Entity_SalesLineItem)) (select Set_SalesLineItem @i)))
(assert (forall ((@i1 Entity_SalesLineItem)(@i2 Entity_Sale)) (=> (and (select Set_SalesLineItem @i1) (select (Set_SalesLineItem_BelongedSale @i1) @i2)) (select Set_Sale @i2))))
(assert (forall ((@i1 Entity_SalesLineItem)(@i2 Entity_Item)) (=> (and (select Set_SalesLineItem @i1) (select (Set_SalesLineItem_BelongedItem @i1) @i2)) (select Set_Item @i2))))
(assert (exists((@i Entity_Item)) (select Set_Item @i)))
(assert (forall ((@i1 Entity_Item)(@i2 Entity_ProductCatalog)) (=> (and (select Set_Item @i1) (select (Set_Item_BelongedCatalog @i1) @i2)) (select Set_ProductCatalog @i2))))
(assert (exists((@i Entity_Payment)) (select Set_Payment @i)))
(assert (forall ((@i1 Entity_Payment)(@i2 Entity_Sale)) (=> (and (select Set_Payment @i1) (select (Set_Payment_BelongedSale @i1) @i2)) (select Set_Sale @i2))))
(assert (exists((@i Entity_CashPayment)) (select Set_CashPayment @i)))
(assert (exists((@i Entity_CardPayment)) (select Set_CardPayment @i)))
(assert (exists((@i Entity_OrderEntry)) (select Set_OrderEntry @i)))
(assert (forall ((@i1 Entity_OrderEntry)(@i2 Entity_Item)) (=> (and (select Set_OrderEntry @i1) (select (Set_OrderEntry_Item @i1) @i2)) (select Set_Item @i2))))
(assert (exists((@i Entity_Supplier)) (select Set_Supplier @i)))
(assert (exists((@i Entity_OrderProduct)) (select Set_OrderProduct @i)))
(assert (forall ((@i1 Entity_OrderProduct)(@i2 Entity_Supplier)) (=> (and (select Set_OrderProduct @i1) (select (Set_OrderProduct_Supplier @i1) @i2)) (select Set_Supplier @i2))))
(assert (forall ((@i1 Entity_OrderProduct)(@i2 Entity_OrderEntry)) (=> (and (select Set_OrderProduct @i1) (select (Set_OrderProduct_ContainedEntries @i1) @i2)) (select Set_OrderEntry @i2))))
(declare-const CurrentCashDesk Entity_CashDesk)(declare-const CurrentStore Entity_Store)(declare-const storeID Int)
(declare-const result Bool)
(declare-const sto Entity_Store)
(assert (ite (select Set_Store sto) (exists ((s Entity_Store)) (and (= sto s) (= (Id s) storeID))) (not(select Set_Store sto))))
(assert (= (not (select Set_Store sto)) false))
(assert (= (IsOpened sto) false))
(declare-const CurrentStore@post Entity_Store)
(declare-const sto@post Entity_Store)
(assert (select Set_Store CurrentStore@post))
(assert (select Set_Store sto@post))
(assert (= CurrentStore@post sto@post))
(assert (= (IsOpened sto@post) true))
(assert (= result true))
