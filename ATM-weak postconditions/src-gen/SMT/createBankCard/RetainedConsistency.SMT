(declare-datatypes () ((CardStatus NORMAL SUSPEND CANNEL)))
(declare-datatypes () ((CardCatalog CREDIT DESPOSIT)))
(declare-datatypes () ((Entity_BankCard (mk_BankCard (CardID Int)(CardStatus CardStatus)(Catalog CardCatalog)(Password Int)(Balance Real)))))
(declare-const Set_BankCard (Set Entity_BankCard))
(declare-const Seq_BankCard (Seq Entity_BankCard))
(declare-datatypes () ((Entity_User (mk_User (UserID Int)(Name String)(Address String)))))
(declare-const Set_User (Set Entity_User))
(declare-const Seq_User (Seq Entity_User))
(declare-fun Set_BankCard_BelongedUser (Entity_BankCard) (Set Entity_User))
(declare-fun Seq_BankCard_BelongedUser (Entity_BankCard) (Seq Entity_User))
(declare-fun Set_User_OwnedCard (Entity_User) (Set Entity_BankCard))
(declare-fun Seq_User_OwnedCard (Entity_User) (Seq Entity_BankCard))
(assert (forall ((@i Entity_BankCard)) (=> (select Set_BankCard @i) (forall ((@i1 Entity_BankCard)) (=> (and (select Set_BankCard @i1) (not (= @i @i1))) (not (= (CardID @i) (CardID @i1))))))))
(assert (forall ((@i Entity_BankCard)) (=> (select Set_BankCard @i) (>= (Balance @i) 0))))
(assert (forall ((@i Entity_User)) (=> (select Set_User @i) (forall ((@i1 Entity_User)) (=> (and (select Set_User @i1) (not (= @i @i1))) (not (= (UserID @i) (UserID @i1))))))))
(assert (exists((@i Entity_BankCard)) (select Set_BankCard @i)))
(assert (forall ((@i1 Entity_BankCard)(@i2 Entity_User)) (=> (and (select Set_BankCard @i1) (select (Set_BankCard_BelongedUser @i1) @i2)) (select Set_User @i2))))
(assert (exists((@i Entity_User)) (select Set_User @i)))
(assert (forall ((@i1 Entity_User)(@i2 Entity_BankCard)) (=> (and (select Set_User @i1) (select (Set_User_OwnedCard @i1) @i2)) (select Set_BankCard @i2))))
(declare-const PasswordValidated Bool)(declare-const WithdrawedNumber Real)(declare-const InputCard Entity_BankCard)(declare-const CardIDValidated Bool)(declare-const IsDeposit Bool)(declare-const IsWithdraw Bool)(declare-const DepositedNumber Real)(declare-const cardid Int)
(declare-const cardstatus CardStatus)
(declare-const catalog CardCatalog)
(declare-const password Int)
(declare-const balance Real)
(declare-const result Bool)
(declare-const bankcard Entity_BankCard)
(assert (ite (select Set_BankCard bankcard) (exists ((ban Entity_BankCard)) (and (= bankcard ban) (= (CardID ban) cardid))) (not(select Set_BankCard bankcard))))
(assert (= (not (select Set_BankCard bankcard)) true))
(declare-const ban@post Entity_BankCard)
(declare-const cardid@post Int)
(declare-const cardstatus@post CardStatus)
(declare-const catalog@post CardCatalog)
(declare-const password@post Int)
(declare-const balance@post Real)
(assert (and (select Set_BankCard ban@post)(= (CardID ban@post) cardid)(= (CardStatus ban@post) cardstatus)(= (Catalog ban@post) catalog)(= (Password ban@post) password)(= (Balance ban@post) balance)(select Set_BankCard ban@post)(= result true)))
(assert (not (>= (Balance ban@post) 0)))
