(declare-datatypes () ((LoanRequestStatus SUBMITTED REFERENCESVALIDATED APPROVED READYFORREVIEW INCOMPLETEINFORMATION)))
(declare-datatypes () ((LoanStatus LSOPEN CLOSED)))
(declare-datatypes () ((CheckingAccountStatus GOODSTANDING SUSPENDED)))
(declare-datatypes () ((LoanAccountStatus NORMAL HASPAIDINFULL)))
(declare-fun type_LoanRequest (Int) Bool)
(declare-fun attribute_LoanRequest_Status (Int) LoanRequestStatus)
(declare-fun attribute_LoanRequest_RequestID (Int) Int)
(declare-fun attribute_LoanRequest_Name (Int) String)
(declare-fun attribute_LoanRequest_LoanAmount (Int) Real)
(declare-fun attribute_LoanRequest_LoanPurpose (Int) String)
(declare-fun attribute_LoanRequest_Income (Int) Real)
(declare-fun attribute_LoanRequest_PhoneNumber (Int) Int)
(declare-fun attribute_LoanRequest_PostalAddress (Int) String)
(declare-fun attribute_LoanRequest_ZipCode (Int) Int)
(declare-fun attribute_LoanRequest_Email (Int) String)
(declare-fun attribute_LoanRequest_WorkReferences (Int) String)
(declare-fun attribute_LoanRequest_CreditReferences (Int) String)
(declare-fun attribute_LoanRequest_CheckingAccountNumber (Int) Int)
(declare-fun attribute_LoanRequest_SecurityNumber (Int) Int)
(declare-fun attribute_LoanRequest_CreditScore (Int) Int)
(declare-fun ref_LoanRequest_ApprovalLoan (Int) (Seq Int))
(declare-fun ref_LoanRequest_RequestedCAHistory (Int) (Seq Int))
(declare-fun ref_LoanRequest_RequestedCreditHistory (Int) (Seq Int))
(declare-fun ref_LoanRequest_AttachedApprovalLetter (Int) (Seq Int))
(declare-fun ref_LoanRequest_AttachedLoanAgreement (Int) (Seq Int))
(declare-fun ref_LoanRequest_AttachedLoanTerms (Int) (Seq Int))
(declare-fun type_Loan (Int) Bool)
(declare-fun attribute_Loan_LoanID (Int) Int)
(declare-fun attribute_Loan_RemainAmountToPay (Int) Real)
(declare-fun attribute_Loan_Status (Int) LoanStatus)
(declare-fun attribute_Loan_IsPaidinFull (Int) Bool)
(declare-fun attribute_Loan_StartDate (Int) Int)
(declare-fun attribute_Loan_EndDate (Int) Int)
(declare-fun attribute_Loan_CurrentOverDueDate (Int) Int)
(declare-fun attribute_Loan_RePaymentDays (Int) Int)
(declare-fun attribute_Loan_RepaymentAmount (Int) Real)
(declare-fun ref_Loan_ReferedLoanRequest (Int) (Seq Int))
(declare-fun ref_Loan_BelongedLoanAccount (Int) (Seq Int))
(declare-fun type_LoanTerm (Int) Bool)
(declare-fun attribute_LoanTerm_ItemID (Int) Int)
(declare-fun attribute_LoanTerm_Content (Int) String)
(declare-fun type_CheckingAccount (Int) Bool)
(declare-fun attribute_CheckingAccount_Balance (Int) Real)
(declare-fun attribute_CheckingAccount_Status (Int) CheckingAccountStatus)
(declare-fun type_CreditHistory (Int) Bool)
(declare-fun attribute_CreditHistory_OutstandingDebt (Int) Real)
(declare-fun attribute_CreditHistory_BadDebits (Int) Int)
(declare-fun type_LoanAccount (Int) Bool)
(declare-fun attribute_LoanAccount_LoanAccountID (Int) Int)
(declare-fun attribute_LoanAccount_Balance (Int) Real)
(declare-fun attribute_LoanAccount_Status (Int) LoanAccountStatus)
(declare-fun type_ApprovalLetter (Int) Bool)
(declare-fun attribute_ApprovalLetter_Content (Int) String)
(declare-fun type_LoanAgreement (Int) Bool)
(declare-fun attribute_LoanAgreement_Content (Int) String)
(assert (forall ((p Int)) (=> (type_LoanRequest p) (forall ((p1 Int)) (=> (and (type_LoanRequest p1) (not (= p p1))) (not (= (attribute_LoanRequest_RequestID p) (attribute_LoanRequest_RequestID p1))))))))
(assert (forall ((p Int)) (=> (type_LoanRequest p) (>= (attribute_LoanRequest_CreditScore p) 0))))
(assert (forall ((p Int)) (=> (type_Loan p) (forall ((p1 Int)) (=> (and (type_Loan p1) (not (= p p1))) (not (= (attribute_Loan_LoanID p) (attribute_Loan_LoanID p1))))))))
(assert (forall ((p Int)) (=> (type_Loan p) (>= (attribute_Loan_RemainAmountToPay p) 0))))
(assert (forall ((p Int)) (=> (type_Loan p) (>= (attribute_Loan_RepaymentAmount p) 0))))
(assert (forall ((p Int)) (=> (type_Loan p) (>= (attribute_Loan_RePaymentDays p) 0))))
(assert (forall ((p Int)) (=> (type_LoanTerm p) (forall ((p1 Int)) (=> (and (type_Loan p1) (not (= p p1))) (not (= (attribute_Loan_LoanID p) (attribute_Loan_LoanID p1))))))))
(assert (forall ((p Int)) (=> (type_CheckingAccount p) (>= (attribute_CheckingAccount_Balance p) 0))))
(assert (forall ((p Int)) (=> (type_CreditHistory p) (>= (attribute_CreditHistory_OutstandingDebt p) 0))))
(assert (forall ((p Int)) (=> (type_CreditHistory p) (>= (attribute_CreditHistory_BadDebits p) 0))))
(assert (forall ((p Int)) (=> (type_LoanAccount p) (forall ((p1 Int)) (=> (and (type_Loan p1) (not (= p p1))) (not (= (attribute_Loan_LoanID p) (attribute_Loan_LoanID p1))))))))
(assert (forall ((p Int)) (=> (type_LoanAccount p) (>= (attribute_LoanAccount_Balance p) 0))))
(assert (exists ((p Int)) (type_LoanRequest p)))
(assert (exists ((p Int)) (type_Loan p)))
(assert (exists ((p Int)) (type_LoanTerm p)))
(assert (exists ((p Int)) (type_CheckingAccount p)))
(assert (exists ((p Int)) (type_CreditHistory p)))
(assert (exists ((p Int)) (type_LoanAccount p)))
(assert (exists ((p Int)) (type_ApprovalLetter p)))
(assert (exists ((p Int)) (type_LoanAgreement p)))
