(declare-datatypes () ((LoanRequestStatus SUBMITTED REFERENCESVALIDATED APPROVED READYFORREVIEW INCOMPLETEINFORMATION)))
(declare-datatypes () ((LoanStatus LSOPEN CLOSED)))
(declare-datatypes () ((CheckingAccountStatus GOODSTANDING SUSPENDED)))
(declare-datatypes () ((LoanAccountStatus NORMAL HASPAIDINFULL)))
(declare-datatypes () ((Entity_LoanRequest (mk_LoanRequest (Status LoanRequestStatus)(RequestID Int)(Name String)(LoanAmount Real)(LoanPurpose String)(Income Real)(PhoneNumber Int)(PostalAddress String)(ZipCode Int)(Email String)(WorkReferences String)(CreditReferences String)(CheckingAccountNumber Int)(SecurityNumber Int)(CreditScore Int)))))
(declare-const Set_LoanRequest (Set Entity_LoanRequest))
(declare-const Seq_LoanRequest (Seq Entity_LoanRequest))
(declare-datatypes () ((Entity_Loan (mk_Loan (LoanID Int)(RemainAmountToPay Real)(Status LoanStatus)(IsPaidinFull Bool)(StartDate Int)(EndDate Int)(CurrentOverDueDate Int)(RePaymentDays Int)(RepaymentAmount Real)))))
(declare-const Set_Loan (Set Entity_Loan))
(declare-const Seq_Loan (Seq Entity_Loan))
(declare-datatypes () ((Entity_LoanTerm (mk_LoanTerm (ItemID Int)(Content String)))))
(declare-const Set_LoanTerm (Set Entity_LoanTerm))
(declare-const Seq_LoanTerm (Seq Entity_LoanTerm))
(declare-datatypes () ((Entity_CheckingAccount (mk_CheckingAccount (Balance Real)(Status CheckingAccountStatus)))))
(declare-const Set_CheckingAccount (Set Entity_CheckingAccount))
(declare-const Seq_CheckingAccount (Seq Entity_CheckingAccount))
(declare-datatypes () ((Entity_CreditHistory (mk_CreditHistory (OutstandingDebt Real)(BadDebits Int)))))
(declare-const Set_CreditHistory (Set Entity_CreditHistory))
(declare-const Seq_CreditHistory (Seq Entity_CreditHistory))
(declare-datatypes () ((Entity_LoanAccount (mk_LoanAccount (LoanAccountID Int)(Balance Real)(Status LoanAccountStatus)))))
(declare-const Set_LoanAccount (Set Entity_LoanAccount))
(declare-const Seq_LoanAccount (Seq Entity_LoanAccount))
(declare-datatypes () ((Entity_ApprovalLetter (mk_ApprovalLetter (Content String)))))
(declare-const Set_ApprovalLetter (Set Entity_ApprovalLetter))
(declare-const Seq_ApprovalLetter (Seq Entity_ApprovalLetter))
(declare-datatypes () ((Entity_LoanAgreement (mk_LoanAgreement (Content String)))))
(declare-const Set_LoanAgreement (Set Entity_LoanAgreement))
(declare-const Seq_LoanAgreement (Seq Entity_LoanAgreement))
(declare-fun Set_LoanRequest_ApprovalLoan (Entity_LoanRequest) (Set Entity_Loan))
(declare-fun Seq_LoanRequest_ApprovalLoan (Entity_LoanRequest) (Seq Entity_Loan))
(declare-fun Set_LoanRequest_RequestedCAHistory (Entity_LoanRequest) (Set Entity_CheckingAccount))
(declare-fun Seq_LoanRequest_RequestedCAHistory (Entity_LoanRequest) (Seq Entity_CheckingAccount))
(declare-fun Set_LoanRequest_RequestedCreditHistory (Entity_LoanRequest) (Set Entity_CreditHistory))
(declare-fun Seq_LoanRequest_RequestedCreditHistory (Entity_LoanRequest) (Seq Entity_CreditHistory))
(declare-fun Set_LoanRequest_AttachedApprovalLetter (Entity_LoanRequest) (Set Entity_ApprovalLetter))
(declare-fun Seq_LoanRequest_AttachedApprovalLetter (Entity_LoanRequest) (Seq Entity_ApprovalLetter))
(declare-fun Set_LoanRequest_AttachedLoanAgreement (Entity_LoanRequest) (Set Entity_LoanAgreement))
(declare-fun Seq_LoanRequest_AttachedLoanAgreement (Entity_LoanRequest) (Seq Entity_LoanAgreement))
(declare-fun Set_LoanRequest_AttachedLoanTerms (Entity_LoanRequest) (Set Entity_LoanTerm))
(declare-fun Seq_LoanRequest_AttachedLoanTerms (Entity_LoanRequest) (Seq Entity_LoanTerm))
(declare-fun Set_Loan_ReferedLoanRequest (Entity_Loan) (Set Entity_LoanRequest))
(declare-fun Seq_Loan_ReferedLoanRequest (Entity_Loan) (Seq Entity_LoanRequest))
(declare-fun Set_Loan_BelongedLoanAccount (Entity_Loan) (Set Entity_LoanAccount))
(declare-fun Seq_Loan_BelongedLoanAccount (Entity_Loan) (Seq Entity_LoanAccount))
(assert (forall ((@i Entity_LoanRequest)) (=> (select Set_LoanRequest @i) (forall ((@i1 Entity_LoanRequest)) (=> (and (select Set_LoanRequest @i1) (not (= @i @i1))) (not (= (RequestID @i) (RequestID @i1))))))))
(assert (forall ((@i Entity_LoanRequest)) (=> (select Set_LoanRequest @i) (>= (CreditScore @i) 0))))
(assert (forall ((@i Entity_LoanRequest)) (=> (select Set_LoanRequest @i) (exists ( (l Entity_LoanRequest) ) (and  (select Set_LoanRequest l) (< (CreditScore l) 0))))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (forall ((@i1 Entity_Loan)) (=> (and (select Set_Loan @i1) (not (= @i @i1))) (not (= (LoanID @i) (LoanID @i1))))))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (>= (RemainAmountToPay @i) 0))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (>= (RepaymentAmount @i) 0))))
(assert (forall ((@i Entity_Loan)) (=> (select Set_Loan @i) (>= (RePaymentDays @i) 0))))
(assert (forall ((@i Entity_LoanTerm)) (=> (select Set_LoanTerm @i) (forall ((@i1 Entity_Loan)) (=> (and (select Set_Loan @i1) (not (= @i @i1))) (not (= (LoanID @i) (LoanID @i1))))))))
(assert (forall ((@i Entity_CheckingAccount)) (=> (select Set_CheckingAccount @i) (>= (Balance @i) 0))))
(assert (forall ((@i Entity_CreditHistory)) (=> (select Set_CreditHistory @i) (>= (OutstandingDebt @i) 0))))
(assert (forall ((@i Entity_CreditHistory)) (=> (select Set_CreditHistory @i) (>= (BadDebits @i) 0))))
(assert (forall ((@i Entity_LoanAccount)) (=> (select Set_LoanAccount @i) (forall ((@i1 Entity_Loan)) (=> (and (select Set_Loan @i1) (not (= @i @i1))) (not (= (LoanID @i) (LoanID @i1))))))))
(assert (forall ((@i Entity_LoanAccount)) (=> (select Set_LoanAccount @i) (>= (Balance @i) 0))))
(assert (exists((@i Entity_LoanRequest)) (select Set_LoanRequest @i)))
(assert (forall ((@i1 Entity_LoanRequest)(@i2 Entity_Loan)) (=> (and (select Set_LoanRequest @i1) (select (Set_LoanRequest_ApprovalLoan @i1) @i2)) (select Set_Loan @i2))))
(assert (forall ((@i1 Entity_LoanRequest)(@i2 Entity_CheckingAccount)) (=> (and (select Set_LoanRequest @i1) (select (Set_LoanRequest_RequestedCAHistory @i1) @i2)) (select Set_CheckingAccount @i2))))
(assert (forall ((@i1 Entity_LoanRequest)(@i2 Entity_CreditHistory)) (=> (and (select Set_LoanRequest @i1) (select (Set_LoanRequest_RequestedCreditHistory @i1) @i2)) (select Set_CreditHistory @i2))))
(assert (forall ((@i1 Entity_LoanRequest)(@i2 Entity_ApprovalLetter)) (=> (and (select Set_LoanRequest @i1) (select (Set_LoanRequest_AttachedApprovalLetter @i1) @i2)) (select Set_ApprovalLetter @i2))))
(assert (forall ((@i1 Entity_LoanRequest)(@i2 Entity_LoanAgreement)) (=> (and (select Set_LoanRequest @i1) (select (Set_LoanRequest_AttachedLoanAgreement @i1) @i2)) (select Set_LoanAgreement @i2))))
(assert (forall ((@i1 Entity_LoanRequest)(@i2 Entity_LoanTerm)) (=> (and (select Set_LoanRequest @i1) (select (Set_LoanRequest_AttachedLoanTerms @i1) @i2)) (select Set_LoanTerm @i2))))
(assert (exists((@i Entity_Loan)) (select Set_Loan @i)))
(assert (forall ((@i1 Entity_Loan)(@i2 Entity_LoanRequest)) (=> (and (select Set_Loan @i1) (select (Set_Loan_ReferedLoanRequest @i1) @i2)) (select Set_LoanRequest @i2))))
(assert (forall ((@i1 Entity_Loan)(@i2 Entity_LoanAccount)) (=> (and (select Set_Loan @i1) (select (Set_Loan_BelongedLoanAccount @i1) @i2)) (select Set_LoanAccount @i2))))
(assert (exists((@i Entity_LoanTerm)) (select Set_LoanTerm @i)))
(assert (exists((@i Entity_CheckingAccount)) (select Set_CheckingAccount @i)))
(assert (exists((@i Entity_CreditHistory)) (select Set_CreditHistory @i)))
(assert (exists((@i Entity_LoanAccount)) (select Set_LoanAccount @i)))
(assert (exists((@i Entity_ApprovalLetter)) (select Set_ApprovalLetter @i)))
(assert (exists((@i Entity_LoanAgreement)) (select Set_LoanAgreement @i)))
(declare-const CurrentLoanRequest Entity_LoanRequest)(declare-const CurrentLoanRequests Entity_LoanRequest)(declare-const result Entity_CheckingAccount)
(assert (= (not (select Set_LoanRequest CurrentLoanRequest)) false))
(assert (= (not (select Set_LoanRequest CurrentLoanRequest)) false))
(declare-const CurrentLoanRequest@post Entity_LoanRequest)
(assert (select Set_LoanRequest CurrentLoanRequest@post))
(assert (= result (Set_LoanRequest_RequestedCAHistory CurrentLoanRequest@post)))
